# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "DO master CI"
on:
  push:
    branches: [ "main" ]

jobs: 
  build:
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout files    
        uses: actions/checkout@v3
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: mvkaran/openmct
          tag_with_ref: true
          tag_with_sha: true
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files    
        uses: actions/checkout@v3
      - name: Get tag name
        uses: olegtarasov/get-tag@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
         
      - name: Provision Droplet and deploy container
        run: doctl compute droplet create "$GIT_TAG_NAME" --image docker-18-04 --size s-1vcpu-1gb --region nyc3 --user-data-file deploy.sh --wait

# Example: Defining outputs for a job
jobs:
  job1:
    runs-on: ubuntu-latest
    # Ask the user for an input before running the job
    inputs:
      num-octocats:
        description: 'Number of Octocats'
        required: false
        default: '1'
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"

