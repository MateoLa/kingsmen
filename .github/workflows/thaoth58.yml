name: CI

# 1
# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
#  push:
#    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
#  workflow_dispatch:
#    inputs:
#      version:
#        description: 'Image version'
#        required: true
#2
env:
  REGISTRY: "your-digitalocean-registry-container-url"
  IMAGE_NAME: "your-docker-image-name"

#3
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo 
        uses: actions/checkout@v2
        
      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      
      - name: Remove all old images
        run: if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
        
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            # mulubwa17
            mkdir test 
            cd test 
            git clone git@github.com:Mulubwa17/ci-cd-to-digitalocean-with-github-actions.git 
            echo 'Deployment successful to digital ocean'

            # Login to registry
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com

            # Stop all running containers
            # docker stop $(echo $IMAGE_NAME)
            docker kill $(docker ps -q)

            # Remove old container
            # docker rm $(echo $IMAGE_NAME)
            docker rm $(docker ps -a -q)

            # Remove all docker images
            docker rmi $(docker images -q)

            cd kingsmen
            git pull

            docker-compose up --build
            
            # Run a new container from a new image
            docker run -d \
            --restart always \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)


# DIGITALOCEAN_ACCESS_TOKEN: A token that you have generated to access the DigitalOcean API.
# HOST: your ssh host (Droplets ipv4)
# PASSPHRASE: to encrypt the private key, generated when you create ssh keys for Droplets.
# SSHKEY: the content of ssh private key. ex raw content of ~/.ssh/id_rsa
# USERNAME: ssh username, default: root